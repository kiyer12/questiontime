show
;
cat db.json 
exit
select * from posts;
select * from faves;
select * from posts JOIN faves where posts.postId = faves.faveId;
select * from posts JOIN faves where posts.postId = faves.postId;
select faveAuthor from posts JOIN faves where posts.postId = faves.faveId;
select faveAuthor from posts JOIN faves where posts.postId = faves.postId;
exit
alter table faves add column authorId TEXT NOT NULL;
delete from faves;
        const stmt = sqlDB
          .prepare(
            "INSERT INTO faves (postId, dateTime, faveAuthor) VALUES (?, ?, ?)"
          )
          .run(
            request.body.messageId,
            new Date().toISOString(),
            JSON.stringify(lightPayload)
          );
        var post = dbGetMessage(request.body.messageId);
        broadcastToAllWebsocketClients(post);
ponse.json(["liked"]);
alter table faves add column authorId TEXT;
alter table faves add column authorId TEXT NOT NULL;
alter table faves delete column authorId;
alter table faves remove column authorId;
alter table faves drop column authorId;
exit
